// File name of currently loaded example (rendered on the bottom of the
// screen for your convenience).
String currentFile;


/*****************************************************
 * Place variables for describing the L-System here. *
 * These might include the final expansion of turtle *
 * commands, the step size d, etc.                   *
 *****************************************************/
String[] spec;
 
/*
 * This method is automatically called when ever a new L-System is
 * loaded (either by pressing 1 - 6, or 'o' to open a file dialog).
 *
 * The lines array will contain every line from the selected 
 * description file. You can assume it's a valid description file,
 * so it will have a length of 6:
 *
 *   lines[0] = number of production rule applications
 *   lines[1] = angle increment in degrees
 *   lines[2] = initial axiom
 *   lines[3] = production rule for F (or the string 'nil')
 *   lines[4] = production rule for X (or the string 'nil')
 *   lines[5] = production rule for Y (or the string 'nil')
 */
void processLSystem(String[] lines) {
  // You should write code within this method to process the L-system
  // and produce whatever data structures you'll need to use to
  // draw the L-system when drawLSystem() is called.
  spec = lines;
}

/*
 * This method is called every frame after the background has been
 * cleared to white, but before the current file name is written to
 * the screen.
 *
 * It is not called if there is no loaded file.
 */
void drawLSystem() {
  // Implement your LSystem rendering here 
  String dis = spec[0];
  String ang = spec[1];
  for (int i = 2; i < 6; i++) {
    String var = spec[2];
    for(int j = 0; j < len(var); j++) {
      char val = var[j];
      if(val == 'F') {
       
      }
      if(val == '+') {
        
      }
      if(val == '-') {
        
      }
    text(var, 10, 20 + 15 * i);
  }
}

void setup() {
  size(500, 500);
}

void draw() {
  background(255);

  if (currentFile != null) {
    drawLSystem();
  }

  fill(0);
  stroke(0);
  textSize(15);
  if (currentFile == null) {
    text("Press [1-6] to load an example, or 'o' to open a dialog", 5, 495);
  } else {
    text("Current l-system: " + currentFile, 5, 495);
  }
}

void keyReleased() {
  /*********************************************************
   * The examples loaded by pressing 1 - 6 must be placed  *
   * in the data folder within your sketch directory.      *
   * The same goes for any of your own files you'd like to *
   * load with relative paths.                             *
   *********************************************************/
   
  if (key == 'o' || key == 'O') {
    // NOTE: This option will not work if you're running the
    // Processing sketch with JavaScript and your browser.
    selectInput("Select a file to load:", "fileSelected");
  } else if (key == '1') {
    loadLSystem("example1.txt");
  } else if (key == '2') {
    loadLSystem("example2.txt");
  } else if (key == '3') {
    loadLSystem("example3.txt");
  } else if (key == '4') {
    loadLSystem("example4.txt");
  } else if (key == '5') {
    loadLSystem("example5.txt");
  } else if (key == '6') {
    loadLSystem("example6.txt");
  } else if (key == '7') {
    loadLSystem("example7.txt");
  }
  // else modify the above code to include
  // keyboard shortcuts for your own examples
}

import java.io.File;
void fileSelected(File selection) {
  if (selection == null) {
    println("File selection cancelled."); 
  } else {
    loadLSystem(selection.getAbsolutePath()); 
  }
}

void loadLSystem(String filename) {
  String[] contents = loadStrings(filename);
  processLSystem(contents);
  currentFile = filename;
}
